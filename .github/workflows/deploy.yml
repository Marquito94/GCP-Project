name: Deploy static site to GCS

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  BUCKET: ${{ secrets.GCS_BUCKET }}
  MAIN_PAGE: index.html
  ERROR_PAGE: 404.html

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (JSON key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
  
      - name: Ensure website config
        run: |
          gsutil web set -m "${MAIN_PAGE}" -e "${ERROR_PAGE}" "gs://${BUCKET}"
          
      - name: Generate runtime config
        run: |
          cat > config.json <<'JSON'
          {
            "apiKey": "${{ secrets.FIREBASE_API_KEY }}",
            "authDomain": "app-dev-468521.firebaseapp.com",
            "projectId": "${{ secrets.FIREBASE_PROJECT_ID }}"
          }
          JSON
          gsutil cp -h "Cache-Control:no-store" config.json "gs://${BUCKET}/config.json"

      - name: Sync files to GCS
        run: |
          SRC="."
          # don't rsync config.json (we already uploaded it with no-store)
          gsutil -m rsync -r -d -x '(^\.git/|^\.github/|^infra/|^\.terraform/|.*\.tf$|README\.md$|(^|/)config\.json$)' "$SRC" "gs://${BUCKET}"

          # HTML: no-store (good for quick updates)
          gsutil -m setmeta -h "Cache-Control:no-store"  "gs://${BUCKET}/*.html" || true
          gsutil -m setmeta -r -h "Cache-Control:no-store" "gs://${BUCKET}/**.html" || true

          # Static assets: cache
          # IMPORTANT: exclude config.json so we don't overwrite its no-store header
          gsutil -m setmeta -r -h "Cache-Control:public,max-age=3600" \
            $(gsutil ls "gs://${BUCKET}/**" | grep -E '\.(css|js|png|jpg|jpeg|svg|webp|ico)$') || true
