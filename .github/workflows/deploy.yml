name: Deploy static site to GCS

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  BUCKET: ${{ secrets.GCS_BUCKET }}
  MAIN_PAGE: index.html
  ERROR_PAGE: 404.html

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (JSON key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Ensure website config (main/error pages)
        run: |
          gsutil web set -m "${MAIN_PAGE}" -e "${ERROR_PAGE}" "gs://${BUCKET}"

      - name: Generate deploy-time JWT
        run: |
          npm init -y >/dev/null 2>&1
          npm i jsonwebtoken >/dev/null 2>&1
          TOKEN=$(node - <<'NODE'
          const jwt = require('jsonwebtoken');
          // MUST match Apigee VerifyJWT policy values below
          const payload = { aud: "process.env.AUDIENCE", iss: "process.env.ISSUER" };
          const token = jwt.sign(payload, process.env.JWT_SECRET, {
            algorithm: "HS256",
            expiresIn: "1h",
          });
          console.log(token);
          NODE
          )
          echo "JWT=$TOKEN" >> $GITHUB_ENV
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          AUDIENCE: ${{ secrets.AUDIENCE }}
          ISSUER: ${{ secrets.ISSUER }}

      - name: Create runtime config.json (no-store)
        run: |
          cat > config.json <<JSON
          {
            "jwt": "${JWT}"
          }
          JSON
          gsutil -h "Cache-Control:no-store" cp config.json "gs://${BUCKET}/config.json"

      - name: Sync files to GCS (exclude config.json so it keeps no-store)
        run: |
          SRC="."
          gsutil -m rsync -r -d -x '(^\.git/|^\.github/|^infra/|^\.terraform/|.*\.tf$|README\.md$|(^|/)config\.json$)' "$SRC" "gs://${BUCKET}"

          # HTML: no-store for quick iteration
          gsutil -m setmeta -h "Cache-Control:no-store"  "gs://${BUCKET}/*.html" || true
          gsutil -m setmeta -r -h "Cache-Control:no-store" "gs://${BUCKET}/**.html" || true

          # Static assets: cache (leave *.json alone)
          ASSETS=$(gsutil ls "gs://${BUCKET}/**" | grep -E '\.(css|js|png|jpg|jpeg|svg|webp|ico)$' || true)
          if [ -n "$ASSETS" ]; then gsutil -m setmeta -r -h "Cache-Control:public,max-age=3600" $ASSETS; fi

      - name: Done
        run: echo "Site: https://pueba-web-dev.com"
